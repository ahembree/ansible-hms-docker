global:
  checkNewVersion: true
  sendAnonymousUsage: false

log:
  level: "{{ traefik_log_level }}"

{% if traefik_enable_access_logs %}
accessLog: {}
{% endif %}

api:
  dashboard: true
  disabledashboardad: true
  insecure: {{ "false" if traefik_security_hardening else "true" }}

entryPoints:
  web:
    address: :80
{% if traefik_ssl_enabled %}
    http:
      redirections:
        entryPoint:
          to: websecure
          scheme: https
          permanent: true

  websecure:
    address: :443
    http:
      tls:
        certResolver: letsencrypt
        domains:
          - main: "{{ traefik_ssl_dns_provider_zone }}"
            sans:
            {% for san in traefik_ssl_sans %}
              - "{{- san -}}"
            {% endfor %}

certificatesResolvers:
  letsencrypt:
    acme:
      email: "{{ traefik_ssl_letsencrypt_email }}"
    {% if traefik_ssl_use_letsencrypt_staging_url %}
      caServer: "https://acme-staging-v02.api.letsencrypt.org/directory"
      storage: /certs/acme_staging.json
    {% else %}
      storage: /certs/acme.json
    {% endif %}
      dnsChallenge:
        provider: "{{ traefik_ssl_dns_provider_code }}"
        resolvers:
          - "{{ traefik_ssl_dns_resolver_1 }}"
          - "{{ traefik_ssl_dns_resolver_2 }}"
{% endif %}

{% if traefik_security_hardening and traefik_ssl_enabled %}
tls:
  options:
    default:
      minVersion: VersionTLS12

    mintls13:
      minVersion: VersionTLS13
{% endif %}

serversTransport:
  insecureSkipVerify: true

providers:
  docker:
    network: "{{ project_name }}_proxy_net"
    endpoint: unix:///var/run/docker.sock
    exposedByDefault: false
    defaultRule: {% raw %}Host(`{{if index .Labels "com.docker.compose.service" }}{{ index .Labels "com.docker.compose.service" }}{% endraw %}.{{ hms_docker_domain }}{% raw %}{{else}}{{ trimPrefix `/` .Name }}{% endraw %}.{{ hms_docker_domain }}{% raw %}{{end}}`){% endraw +%}
  file:
    directory: /etc/traefik/static_files
    watch: true

