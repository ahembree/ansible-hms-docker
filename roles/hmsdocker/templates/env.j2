### BEGIN Global
HMSD_APPS_PATH={{ hms_docker_apps_path }}
HMSD_MOUNT_PATH={{ hms_docker_mount_path }}
HMSD_DOMAIN={{ hms_docker_domain }}
PUID={{ container_uid }}
PGID={{ container_gid }}
TIMEZONE={{ container_timezone }}
COMPOSE_PROJECT={{ project_name }}
RESTART_POLICY={{ container_restart_policy }}
### END Global

### BEGIN Plex
{% if hmsdocker_container_enabled_plex %}
PLEX_CLAIM_TOKEN={{ plex_claim_token }}
{% endif %}
{% if hms_docker_plex_ssl_enabled and traefik_ssl_enabled %}
# These values are only used by the SSL conversion script
PLEX_PUBLIC_SUBDOMAIN={{ hms_docker_plex_ssl_subdomain }}
PLEX_CERTIFICATE_PASSPHRASE={{ hms_docker_plex_ssl_cert_pass }}
PLEX_CERT_UPDATE_CONFIG={{ hms_docker_plex_ssl_update_config }}
PLEX_CERT_RESTART={{ hms_docker_plex_ssl_restart_plex }}
{% endif %}
### END Plex

### BEGIN VPN
VPN_PROVIDER={{ hmsdocker_vpn_provider | default('') }}
VPN_USER={{ hmsdocker_vpn_user | default('') }}
VPN_PASS={{ hmsdocker_vpn_pass | default('') }}
VPN_REPO={{ transmission_ovpn_config_source_repo | default('') }}
VPN_CONFIG_FILE_NAME={{ transmission_ovpn_config_file | default('') }}
VPN_CONFIG_LOCAL_DIR={{ transmission_ovpn_config_local_dir | default('') }}
### END VPN

### BEGIN Traefik env vars
TRAEFIK_TAG=v3.0.1
{% if hmsdocker_container_enabled_traefik and traefik_ssl_dns_provider_environment_vars %}
{% for key, value in traefik_ssl_dns_provider_environment_vars.items() %}
{{ key }}={{ value }}
{% endfor %}
{% endif %}
### END Traefik env vars

### BEGIN Cloudflare
{% if cloudflare_ddns_enabled %}
CLOUDFLARE_API_TOKEN={{ cloudflare_api_token }}
CLOUDFLARE_DOMAIN={{ cloudflare_ddns_domain }}
{% endif %}
{% if cloudflare_tunnel_enabled %}
CLOUDFLARE_TUNNEL_TOKEN={{ cloudflare_tunnel_token }}
{% endif %}
### END Cloudflare

{% if hmsdocker_authentik_enabled_globally %}
### BEGIN Authentik
AUTHENTIK_TAG=latest
{# Pull in the slurped data and decode it. #}
{# Separate files are used for these as they're supposed to remain persistent and should not be changed, and docker-compose cannot use an env_file setting and also reference it within compose in a ${} variable #}
AUTHENTIK_SECRET_KEY={{ authentik_key -}}
PG_PASS={{ authentik_pgpass -}}
PG_USER={{ authentik_pgu }}
PG_DB={{ authentik_pgdb }}
{% if hmsdocker_authentik_geoip_enabled %}
GEOIP_ACC_ID: "{{ authentik_geoip_account_id }}"
GEOIP_LIC_KEY: "{{ authentik_geoip_license_key }}"
{% endif %}
### END Authentik
{% endif %}

{% if hmsdocker_container_enabled_tailscale %}
### BEGIN Tailscale
TAILSCALE_AUTH_KEY={{ tailscale_auth_key }}
### END Tailscale
{% endif %}

### BEGIN App API Keys
NOTIFIARR_API_KEY={{ hmsdocker_notifiarr_api_key | default('') }}
SONARR_KEY={{ sonarr_key | default('') }}
SONARR_4K_KEY={{ sonarr_4k_key | default('') }}
RADARR_KEY={{ radarr_key | default('') }}
RADARR_4K_KEY={{ radarr_4k_key | default('') }}
PROWLARR_KEY={{ prowlarr_key | default('') }}
SABNZBD_KEY={{ sabnzbd_key | default('') }}
NZBGET_KEY={{ homepage_nzbget_key | default('') }}
TAUTULLI_KEY={{ tautulli_key | default('') }}
PLEX_KEY={{ plex_key | default('') }}
OVERSEERR_KEY={{ overseerr_key.main.apiKey | default('') }}
BAZARR_KEY={{ bazarr_key.auth.apikey | default('') }}
AUTHENTIK_KEY={{ homepage_authentik_key | default('') }}
PORTAINER_KEY={{ homepage_portainer_key | default('') }}
READARR_KEY={{ readarr_key | default('') }}
WATCHTOWER_KEY={{ watchtower_key | default('') }}
JELLYFIN_KEY={{ homepage_jellyfin_key | default('') }}
EMBY_KEY={{ homepage_emby_key | default('') }}
LIDARR_KEY={{ lidarr_key | default('') }}
AUTOBRR_KEY={{ homepage_autobrr_key | default('') }}
SPEEDTEST_API_KEY={{ hmsdocker_speedtest_api_key | default('') }}
SPEEDTEST_SCHEDULE={{ hmsdocker_speedtest_schedule | default('0 0 * * *')}}
TMM_VNC_PASSWORD={{ hmsdocker_tinymediamanager_vnc_password | default('Th1s1SinS3cuR3Pl3@s3cH@Ng') }}
NETDATA_CLAIM_TOKEN={{ hmsdocker_netdata_claim_token | default('') }}
NETDATA_CLAIM_URL={{ hmsdocker_netdata_claim_url | default('') }}
NETDATA_CLAIM_ROOMS={{ hmsdocker_netdata_claim_rooms | default('') }}
TUBEARCHIVIST_USERNAME={{ hmsdocker_tubearchivist_username | default('tubearchivist') }}
TUBEARCHIVIST_PASSWORD={{ hmsdocker_tubearchivist_password | default('verysecret') }}
### END App API Keys


{% if monitoring_scripts_enabled %}
### BEGIN Custom Monitoring Scripts
{% if media_avail_script_enabled %}
MON_UPTIME_KUMA_MEDIA_AVAILABLE_PUSH_URL={{ media_avail_kuma_push_url }}
{% endif %}
### END Custom Montioring Scripts
{% endif %}
